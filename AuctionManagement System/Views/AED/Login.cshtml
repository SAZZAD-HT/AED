@{
    Layout = null; // This disables the default layout, removing the header and footer
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Custom CSS and Tailwind CSS -->
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <!-- Montserrat Font -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet">

    <style>
        body {
            font-family: 'Montserrat', sans-serif;
        }

        

        /* Loader Styles */
        .loader {
            border: 4px solid #f3f3f3;
            border-radius: 50%;
            border-top: 4px solid #3498db;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            display: none; /* Hidden by default */
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .loader-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body class="flex flex-col items-center justify-center min-h-screen p-2 md:p-0" style="background-image: url('@Url.Content("~/css/Images/Background.jpg")'); background-size: cover; background-position: center;">

    <!-- Loader -->
    <div id="loaderContainer" class="loader-container flex">
        <div class="loader"></div>
    </div>

    <div class="bg-gradient-to-r from-blue-500 via-blue-400 to-white shadow-md rounded-lg p-5 max-w-xs sm:max-w-sm w-full relative">
        <!-- Reduced padding and max-width -->
        <div class="flex flex-col items-center mb-6">
            <img src="@Url.Content("~/css/Images/AED.png")" alt="Logo" class="w-23 h-23 mb-2 ml-custom" />
            <h1 class="text-xl font-bold text-blue-900 tracking-wide">Login</h1>
        </div>

      
        <form id="loginForm">
            <div class="mb-4">
                <label for="Username" class="block text-sm font-semibold mb-2">User Name</label>
                <input id="Username" name="Username" type="text" class="w-full p-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600" placeholder="Enter your User Name" required />
                <span id="UsernameError" class="text-red-500 text-xs"></span>
            </div>
            <div class="mb-4">
                <label for="Password" class="block text-sm font-semibold mb-2">Password </label>
                <input id="Password" name="Password" type="text" class="w-full p-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600" placeholder="Enter your Password" required />
                <span id="PasswordError" class="text-red-500 text-xs"></span>
            </div>

            <button type="submit" class="w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition duration-200">Login</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        document.getElementById('loginForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            const username = document.getElementById('Username').value;
            const password = document.getElementById('Password').value;

            // Validate email and mobile number
           

            const formData = {
                Username: username,
                Password: password
            };

            // Show the loader
            document.getElementById('loaderContainer').style.display = 'flex';

            try {
                const response = await fetch('@Url.Action("Login", "AED")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                    body: JSON.stringify(formData)
                });

                // Hide the loader
                document.getElementById('loaderContainer').style.display = 'none';

                if (response.ok) {
                    const result = await response.json();

                    // Perform client-side redirection based on the result
                    if (result.redirectUrl) {
                        window.location.href = result.redirectUrl; // Navigate to the new page
                    } else {
                        console.log('Login successful');
                    }
                } else {
                    const result = await response.json();
                    console.error('Login failed:', result);
                    alert('Login failed. Please check your credentials and try again.');
                    document.getElementById('UsernameError').innerText = result.errors?.Username || '';
                    document.getElementById('PasswordError').innerText = result.errors?.Password || '';
                }
            } catch (error) {
                // Hide the loader in case of error
                document.getElementById('loaderContainer').style.display = 'none';
                console.error('Error:', error);
                alert('An error occurred. Please try again later.');
            }
        });
    </script>
</body>
</html>
